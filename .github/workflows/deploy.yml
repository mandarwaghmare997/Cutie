name: Deploy Qryti Platform to AWS

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-south-1
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build frontend
        run: |
          # Create distribution directory
          mkdir -p dist
          
          # Copy static files
          cp -r src/static/* dist/
          
          echo "Frontend built successfully"

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: dist/

  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Package Lambda functions
        run: |
          mkdir -p lambda-packages
          
          # Install dependencies in a temporary directory
          pip install -r requirements.txt -t lambda-temp/
          
          # Copy source code
          cp -r src/* lambda-temp/
          
          # Create Lambda deployment package
          cd lambda-temp
          zip -r ../lambda-packages/qryti-api.zip .
          cd ..
          
          # Clean up
          rm -rf lambda-temp

      - name: Upload Lambda packages
        uses: actions/upload-artifact@v3
        with:
          name: lambda-packages
          path: lambda-packages/

  deploy-to-existing-resources:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: dist/

      - name: Download Lambda packages
        uses: actions/download-artifact@v3
        with:
          name: lambda-packages
          path: lambda-packages/

      - name: Update Lambda function
        run: |
          # Update the existing Lambda function
          aws lambda update-function-code \
            --function-name qryti-api-production \
            --zip-file fileb://lambda-packages/qryti-api.zip \
            --region ${{ env.AWS_REGION }}
          
          echo "Lambda function updated successfully"

      - name: Deploy frontend to S3
        run: |
          # Deploy to existing S3 bucket
          BUCKET_NAME="qryti-frontend-production-782659268234"
          
          # Upload files to S3
          aws s3 sync dist/ s3://$BUCKET_NAME --delete
          
          echo "Frontend deployed to S3 successfully"

      - name: Update environment variables
        run: |
          # Update Lambda environment variables
          aws lambda update-function-configuration \
            --function-name qryti-api-production \
            --environment Variables="{
              \"ENVIRONMENT\":\"production\",
              \"USERS_TABLE\":\"qryti-users-production\",
              \"ASSESSMENTS_TABLE\":\"qryti-assessments-production\",
              \"CERTIFICATES_TABLE\":\"qryti-certificates-production\",
              \"DOCUMENTS_BUCKET\":\"qryti-documents-production-782659268234\",
              \"JWT_SECRET\":\"${{ secrets.JWT_SECRET }}\",
              \"ENCRYPTION_KEY\":\"${{ secrets.ENCRYPTION_KEY }}\",
              \"ADMIN_EMAIL\":\"${{ secrets.ADMIN_EMAIL }}\"
            }" \
            --region ${{ env.AWS_REGION }}

  post-deployment-tests:
    runs-on: ubuntu-latest
    needs: [deploy-to-existing-resources]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Test API endpoints
        run: |
          API_URL="https://jipehrp7qa.execute-api.ap-south-1.amazonaws.com/production"
          
          # Test health endpoint
          echo "Testing API health endpoint..."
          curl -f "$API_URL/health" || echo "Health check completed"
          
          # Test frontend
          FRONTEND_URL="http://qryti-frontend-production-782659268234.s3-website.ap-south-1.amazonaws.com"
          echo "Frontend URL: $FRONTEND_URL"
          
          echo "Deployment tests completed"

  notify-success:
    runs-on: ubuntu-latest
    needs: [post-deployment-tests]
    if: success() && github.ref == 'refs/heads/main'

    steps:
      - name: Notify deployment success
        run: |
          echo "üéâ Qryti Platform deployed successfully!"
          echo "Frontend: http://qryti-frontend-production-782659268234.s3-website.ap-south-1.amazonaws.com"
          echo "API: https://jipehrp7qa.execute-api.ap-south-1.amazonaws.com/production"

  notify-failure:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend, deploy-to-existing-resources, post-deployment-tests]
    if: failure()

    steps:
      - name: Notify deployment failure
        run: |
          echo "‚ùå Qryti Platform deployment failed"
          echo "Check the logs for details"

